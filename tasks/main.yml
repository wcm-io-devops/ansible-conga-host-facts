---
- name: "Set host_pattern facts."
  set_fact:
    # get the conga_variants from the host pattern
    _host_pattern_variants: "{{ conga_host_facts_pattern.split(':')
                            | map('regex_replace', '.*conga_variants_', '')
                            | list }}"

- name: "Use inventory_ec2."
  include_tasks: "inventory_ec2.yml"
  when: "'ec2' in group_names"  # aws inventory is used

- name: "Use inventory_openstack."
  include_tasks: "inventory_openstack.yml"
  when: "'openstack' in group_names"  # openstack inventory is used

- name: "Use inventory_default."
  include_tasks: "inventory_default.yml"
  when:
    - "'ec2' not in group_names"  # 'default' static inventory is used
    - "'openstack' not in group_names"  # 'default' static inventory is used

- name: Debug _host_pattern_variant step 1
  debug:
    var: conga_host_facts_pattern.split(':')
    verbosity: 1

- name: Debug _host_pattern_variant step 1.1
  debug:
    var: conga_host_facts_pattern.split(':') | list
    verbosity: 1

- name: Debug _host_pattern_variant step 1.2
  debug:
    var: conga_host_facts_pattern.split(':') | list | length
    verbosity: 1

- name: Debug _host_pattern_variant step 1 - type
  debug:
    var: conga_host_facts_pattern.split(':') | type_debug
    verbosity: 1

- name: Debug _host_pattern_variant step 2
  debug:
    var: conga_host_facts_pattern.split(':') | map('regex_replace', '.*conga_variants_', '')
    verbosity: 1

- name: Debug _host_pattern_variant step 2 - type
  debug:
    var: conga_host_facts_pattern.split(':') | map('regex_replace', '.*conga_variants_', '') | type_debug
    verbosity: 1

- name: Debug _host_pattern_variant step 3
  debug:
    var: conga_host_facts_pattern.split(':') | map('regex_replace', '.*conga_variants_', '') | list
    verbosity: 1

- name: Debug _host_pattern_variant step 3 - type
  debug:
    var: conga_host_facts_pattern.split(':') | map('regex_replace', '.*conga_variants_', '') | list | type_debug
    verbosity: 1


- name: Debug conga_host_facts_pattern
  debug:
    var: conga_host_facts_pattern
    verbosity: 1

- name: Debug conga_host_facts_pattern - details
  debug:
    msg:
      - "type: {{ conga_host_facts_pattern | type_debug }}"
    verbosity: 1

- name: Debug _host_pattern_variants
  debug:
    var: _host_pattern_variants
    verbosity: 1

- name: Debug _host_pattern_variants - details
  debug:
    msg:
      - "type: {{ _host_pattern_variants | type_debug }}"
      - "length: {{ _host_pattern_variants | length }}"
    verbosity: 1

- name: Debug _instance_conga_nodes
  debug:
    var: _instance_conga_nodes
    verbosity: 1

- name: Debug _instance_conga_nodes - details
  debug:
    msg:
      - "type: {{ _instance_conga_nodes | type_debug }}"
      - "length: {{ _instance_conga_nodes | length }}"
    verbosity: 1

- name: Debug _instance_conga_variant_node_mapping_list
  debug:
    var: _instance_conga_variant_node_mapping_list
    verbosity: 1

- name: Debug _instance_conga_variant_node_mapping_list - details
  debug:
    msg:
      - "type: {{ _instance_conga_variant_node_mapping_list | type_debug }}"
      - "length: {{ _instance_conga_variant_node_mapping_list | length }}"
    verbosity: 1

- name: "Ensure that host pattern is only for one variant when multiple nodes exist on one machine."
  assert:
    that:
      - _host_pattern_variants | length == 1
    msg: >
      Use only one variant in the host pattern when setting up a singlehost instance!
      Found conga_nodes on instance: {{ _instance_conga_nodes | join(', ') }}
      Host pattern variants: {{ _host_pattern_variants | join(', ') }}
  when: _instance_conga_nodes | length > 1

- name: "Set instance_conga_variant_node_mapping."
  set_fact:
    _instance_conga_variant_node_mapping: "{{ _instance_conga_variant_node_mapping
                                              | combine({ item.split('=')[0] : item.split('=')[1] }) }}"
  with_items: "{{ _instance_conga_variant_node_mapping_list }}"
  when: _instance_conga_variant_node_mapping_list | length > 0

- name: "set conga_node (one node on host)."
  set_fact:
    conga_node: "{{ _instance_conga_nodes[0] }}"
  when: _instance_conga_nodes | length == 1

- name: "multiple nodes on one host."
  block:
    - name: "Ensure that conga_variant node_mapping contains the found host_pattern variant"
      assert:
        that:
          - _instance_conga_variant_node_mapping[_host_pattern_variants[0]] is defined
        msg: >
          Unable to retrieve the conga_node for '{{ _host_pattern_variants[0] }}'
          Available nodes and their variants:
          {{ _instance_conga_variant_node_mapping }}

    - name: "set conga_node (multiple nodes on one host)."
      set_fact:
        conga_node: "{{ _instance_conga_variant_node_mapping[_host_pattern_variants[0]] }}"
  when:
    - _host_pattern_variants | length == 1
    - _instance_conga_nodes | length > 1

- name: "Log found conga_node."
  debug:
    msg:
      - "conga_node         : '{{ conga_node }}'"
      - "host pattern       : '{{ conga_host_facts_pattern }}'"
      - "inventory_hostname : '{{ inventory_hostname }}'"
    verbosity: 1
